h2mem {
  url = "jdbc:h2:mem:slickdemo"
  driver = "org.h2.Driver"
  connectionPool = disabled
  keepAliveConnection = true
}

h2 = {
  url = "jdbc:h2:~/slickdemo;mv_store=false;MODE=MSSQLServer;DB_CLOSE_DELAY=-1;AUTO_SERVER=TRUE"
  driver = org.h2.Driver
  connectionPool = disabled
  keepAliveConnection = true
}

mysql {
  driver = "slick.driver.MySQLDriver$"
  db {
    url = "jdbc:mysql://localhost/slickdemo"
    driver = com.mysql.jdbc.Driver
    keepAliveConnection = true
    user="root"
    password="root"
    numThreads=10
    maxConnections = 12
    minConnections = 4
  }
}
mysql_db {
  url = "jdbc:mysql://127.0.0.1:3306/db_slick_example?useUnicode=true&characterEncoding=UTF-8&useSSL=false",
  driver = "com.mysql.jdbc.Driver",
  user = "root",
  password = "root"
  numThreads = 5
}

mysqldb = {
  dataSourceClass = "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
  properties {
    user = "root"
    password = "123"
    databaseName = "slickdemo"
    serverName = "localhost"
  }
  numThreads = 10
  maxConnections = 12
  minConnections = 4
}

postgres {
  driver = "slick.driver.PostgresDriver$"
  db {
    url = "jdbc:postgresql://127.0.0.1/slickdemo"
    driver = "org.postgresql.Driver"
    connectionPool = HikariCP
    user = "slick"
    password = "123"
    numThreads = 10
    maxConnections = 12
    minConnections = 4
  }
}

postgressdb = {
  dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
  properties = {
    databaseName = "slickdemo"
    user = "slick"
    password = "123"
  }
  connectionPool = HikariCP
  numThreads = 10
  maxConnections = 12
  minConnections = 4
}

mssql {
  driver = "com.typesafe.slick.driver.ms.SQLServerDriver$"
  db {
    url = "jdbc:sqlserver://host:port"
    driver = com.microsoft.sqlserver.jdbc.SQLServerDriver
    connectionTimeout = 30 second
    connectionPool = HikariCP
    user = "slick"
    password = "123"
    numThreads = 10
    maxConnections = 12
    minConnections = 4
    keepAliveConnection = true
  }
}

tsql {
  driver = "slick.driver.H2Driver$"
  db = ${h2mem}
}